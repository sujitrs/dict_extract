# This example demonstrates how to check for a combination of given IP and JVM_NAME against defined dictionary 
# ansible-playbook mapping_example.yml --extra-var "ip=10.226.202.42 jvm=DSH_1" 
# ansible-playbook mapping_example.yml --extra-var "ip=10.226.202.42 jvm=DSH_2"

- name:  Argument Variable based attribute extraction from a dictionary
  hosts: localhost

  vars:
    components:
      10.226.202.41:
        path: /etc/lib/
        jvmName:
          - ARX_1
          - CBX_1
          - DSH_1
      10.226.202.42:
        path: /usr/bin/
        jvmName:
          - ARX_2
          - CBX_2
          - DSH_2
      10.226.202.43:
        path: /java/usr/bin
        jvmName:
          - ARX_3
          - CBX_3
          - DSH_3
        
  tasks:
    - name: set_fact when backend in key
      ansible.builtin.set_fact:
        ip_exists: true
      loop: "{{ lookup('ansible.builtin.dict', components) }}"
      #when: "'10.226.202.42' in item.key and 'DSH_2' in item.value.jvmName"
      when: "'{{ ip }}' in item.key and '{{ jvm }}' in item.value.jvmName" 
    - name: check if given ip JVM nam exists
      debug:
        msg: "Given IP: {{ ip }} and JVM Name: {{ jvm }} matching= {{ ip_exists }}"  
    
